<Window x:Class="WPFclinica.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFclinica" xmlns:Viewmodels="clr-namespace:WPFclinica.Views"
        mc:Ignorable="d"
        Title="Inicio" 
        Height="600" 
        Width="1000"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"        
        >
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="BTNHEADERSTYLE" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="10" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="pINK"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="PINK"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="BTNShowHide" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border  x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="BtnLista" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="white"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="white"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <Style x:Key="ListViewStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual3}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="transparent"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="transparent"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#region PACIENTES-->
        <DataTemplate x:Name="Pacientes"
                      DataType="{x:Type Viewmodels:Pacientes}">
            <Viewmodels:Pacientes DataContext ="{Binding}"/>

        </DataTemplate>
        <!--#endregion PACIENTES-->
    </Window.Resources>

    <Border CornerRadius="10" Background="GhostWhite" >



        <Grid Name="Principal" 
              Background="white" >

            <!--#region  HEADER-->
            <Grid x:Name="Header"
                  Height="35"
                  VerticalAlignment="Top"
                  Background="Transparent">
                <Border CornerRadius="10,10,0,0" Background="#f8bbd0"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="220"/>
                        <ColumnDefinition Width="100"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Text="Doctora Dulce Paíz"
                        Grid.Column="0"
                        Foreground="Black"
                        FontSize="15"
                        Margin="10,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        />
                    <Button Style="{DynamicResource BTNHEADERSTYLE}"  x:Name="BtnCuenta"
                        Grid.Column="1"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        FontSize="15"
                        Foreground="Black"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        Cursor="Hand">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                        </Grid>


                    </Button>
                    <Button Style="{DynamicResource BTNHEADERSTYLE}" x:Name="BtnInfo"
                                 Grid.Column="1"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        FontSize="15"
                        Foreground="Black"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        Cursor="Hand">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                        </Grid>

                    </Button>
                    <Button Style="{DynamicResource BTNHEADERSTYLE}" x:Name="BtnMinimizar"
                                 Grid.Column="2"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Height="25"
                       Width="25"
               
                        VerticalAlignment="Top"
                        HorizontalAlignment="Right"
                        Margin="0,5,30,0" Click="Minimizar">

                        <Image 
    
                                   Source="/SCS/IMG/window-minimize-solid.png"
                                   Cursor="Hand" />
                    </Button>
                    <Button Style="{DynamicResource BTNHEADERSTYLE}" x:Name="BtnCerrar"
                                 Grid.Column="2"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Height="25"
                       Width="25"
               
                        VerticalAlignment="Top"
                        HorizontalAlignment="Right"
                        Margin="0,5,5,0" Click="Cerrar">
                        <Image 
                                   Source="/SCS/IMG/window-close-solid.png"
                                   Cursor="Hand" />
                    </Button>
                </Grid>

            </Grid>

            <!--#endregion header-->

            <!--#region SIDE MENU-->

            <Grid x:Name="GridMenu"
                Width="75"
                HorizontalAlignment="Left"
                Margin="0,35,0,0" >
                <Border
                    Background="#fce4ec"
                    CornerRadius="0,0,0,0"/>

                <!--#region MENU-->
                <StackPanel
                    Background="Transparent"
                    VerticalAlignment="Top">
                    <Grid Background="Transparent"
                          VerticalAlignment="Top"
                          HorizontalAlignment="Right"
                          Margin="0,10,10,0">
                        <ToggleButton Style="{DynamicResource BTNShowHide}" x:Name="BtnShowHide"
                                      Width="30"
                                      Height="30"
                                      Cursor="Hand"
                                      BorderBrush="Transparent" 
                                     Checked="TBShow1" 
                                      Unchecked="TBHide">
                            <ToggleButton.Background>
                                <ImageBrush ImageSource="/SCS/IMG/bars-solid.png"/>
                            </ToggleButton.Background>
                            <ToggleButton.Triggers>
                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard x:Name="ShowPanel">
                                            <DoubleAnimation Storyboard.TargetName="GridMenu"
                                             Storyboard.TargetProperty="Width" 
                                              BeginTime="0:0:0"
                                               From="75" To="200"
                                               Duration="0:0:0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard x:Name="HidePanel">
                                            <DoubleAnimation Storyboard.TargetName="GridMenu"
                                             Storyboard.TargetProperty="Width" 
                                              BeginTime="0:0:0"
                                               From="200" To="75"
                                               Duration="0:0:0.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ToggleButton.Triggers>
                        </ToggleButton>
                    </Grid>
                </StackPanel>
                <ListView Background="Transparent"
                          BorderBrush="Transparent"
                          Margin="0,30,0,0"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <!--#endregion MENU-->

                    <!--#region LISTA -->
                    <!--#region  INICIO-->
                    <ListViewItem Style="{DynamicResource ListViewStyle}" Height="70">
                        <Button Style="{DynamicResource BtnLista}" x:Name="BtnInicio"
                                Height="70"
                                Width="200"
                                HorizontalAlignment="Left"
                                Cursor="Hand"
                                Background="Transparent"
                                BorderBrush="Transparent" Click="Return" >
                            <Grid Width="200">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Width="50"
                                   HorizontalAlignment="Center"
                                   Source="/SCS/IMG/clinic-medical-solid.png"/>
                                <TextBlock Grid.Column="1"
                                           Text="Inicio"
                                           FontWeight="SemiBold"
                                           FontSize="15"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"/>
                            </Grid>


                        </Button>
                    </ListViewItem>
                    <!--#endregion INICIO-->
                    <!--#region  PACIENTES-->
                    <ListViewItem Style="{DynamicResource ListViewStyle}" Height="70">
                        <Button Style="{DynamicResource BtnLista}" x:Name="BtnPOS"
                                Height="70"
                                Width="200"
                                HorizontalAlignment="Left"
                                Cursor="Hand"
                                Background="Transparent"
                                BorderBrush="Transparent" Click="Pacientes">
                            <Grid Width="200">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image Width="50"
                                   Grid.Column="0"
                                   HorizontalAlignment="Center"
                                   Source="/SCS/IMG/id-badge-solid.png"/>
                                <TextBlock Grid.Column="1"
                                           Text="Pacientes"
                                           FontWeight="SemiBold"
                                           FontSize="15"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"/>
                            </Grid>


                        </Button>
                    </ListViewItem>
                    <!--#endregion PACIENTES-->
                </ListView>


                <!--#endregion LISTA-->



            </Grid>

            <!--#endregion  SIDE MENU -->


            <!--#region CONTENT-->
            <Grid x:Name= "GridContent"
              Background ="Transparent"
                VerticalAlignment="Bottom"
                HorizontalAlignment="Right"
                Height="565"
                Width="925" PreviewMouseLeftButtonDown="PreviewMouseLeftBottonDownBG">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="884*"/>
                    <ColumnDefinition Width="41*"/>
                </Grid.ColumnDefinitions>
                <Image Width="413"
                                   Grid.Column="0"
                                   HorizontalAlignment="Center"
                                   Source="/SCS/IMG/logo.PNG"/>
                <Border

                    CornerRadius="0,0,0,10"
                    Background="Transparent" Grid.ColumnSpan="2"/>
                <ContentControl Content="{Binding}"/>
            </Grid>
            <!--#endregion CONTENT-->











        </Grid>

    </Border>

</Window>
